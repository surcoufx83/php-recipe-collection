
      var fileids = [{{ Page.FileIds|join(', ') }}];
      var filepages = 0;
      var runningfiles = [];
      var runningid = 0;
      var runningnext = false;

      var requestsdone = 0;
      var requestssent = 0;
      var lastrequest = -1;

      var pagescompl = 0;
      var pagesfailed = 0;
      var filescount = 0;
      var pagecount = 0;
      var totalpoints = 0;
      var progressbar = null;
      var progressbarfailed = null;

      $('#files-ocr-runall').click(function() {
        for (id of fileids) {
          registerRunner(id);
        }
      });

      $('.files-ocr-runfile').click(function() {
        var fileid = $(this).data('fileid');
        registerRunner(fileid);
      })

      function registerRunner(fileid) {
        if (runningfiles.indexOf(fileid) > -1)
          return;
        var fileobj = $('#file-' + fileid);
        if (fileobj.length == 0)
          return;
        filescount += 1;
        pagecount += fileobj.data('pages');
        totalpoints = pagecount * 2 + filescount * 3;
        runningfiles.push(fileid);
        $('#files-ocr-' + fileid + '-runner-icon').addClass('text-success');
      }

      function reportError(fileid, runner, errno, error, sev) {
        var token = 't' + Date.now();
        $('#files-ocr-errors').append('<li class="list-group-item list-group-item-' + sev + '" id="' + token + '"><a target="_blank" class="font-weight-bold" href="/file/' + fileid + '">#' + fileid + ': ' + $('#file-' + fileid).data('name') + '</a><br />' + errno + ': ' + error + '</li>');
      }

      $(function() {
        progressbar = $('#ocr-progress');
        progressbarfailed = $('#ocr-progress-failed');
        standbyRunner();
      });

      function standbyRunner() {
        if (runningfiles.length > 0) {
          progressbar.addClass('progress-bar-animated');
          workingRunner();
        }
        else
          setTimeout(standbyRunner, 1000);
      }

      function updateProgress(failed = false) {
        if (!failed) {
          pagescompl += 1;
          var rel = pagescompl / totalpoints * 100;
          progressbar.attr('aria-valuenow', Math.floor(rel)).css('width', Math.floor(rel) + '%');
        } else {
          pagesfailed += 1;
          var rel = pagesfailed / totalpoints * 100;
          progressbarfailed.attr('aria-valuenow', Math.floor(rel)).css('width', Math.floor(rel) + '%');
        }
      }

      function workingRunner() {
        if (runningfiles.length > 0) {
          if (runningid == 0) {
            runningid = runningfiles[0];
            runningnext = 'init';
          }
          if (runningnext != false)
            workerStart(runningnext);
          setTimeout(workingRunner, 500);
        } else {
          progressbar.removeClass('progress-bar-animated');
          standbyRunner();
        }
      }

      function workerStart(mode) {
        runningnext = false;
        if (mode == 'init') {
          filepages = $('#file-' + runningid).data('pages');
          $('#files-ocr-' + runningid + '-runner-icon').removeClass('text-success');
          $('#files-ocr-' + runningid + '-runner-icon').addClass('d-none');
          $('#files-ocr-' + runningid + '-spinner-icon').removeClass('d-none');
          workerVal();
        } else if (mode == 'genjpg') {
          requestsdone = 0;
          requestssent = 0;
          lastrequest = -1;
          workerJpg();
        } else if (mode == 'genocr') {
          requestsdone = 0;
          requestssent = 0;
          lastrequest = -1;
          workerOcr();
        } else if (mode == 'gentif') {
          requestsdone = 0;
          requestssent = 0;
          lastrequest = -1;
          workerTif();
        } else if (mode == 'purimg') {
          requestsdone = 0;
          requestssent = 0;
          lastrequest = -1;
          workerPurge();
        } else if (mode == 'finish') {
          $('#files-ocr-' + runningid + '-unchecked-icon').addClass('d-none');
          $('#files-ocr-' + runningid + '-checked-icon').removeClass('d-none');
          $('#files-ocr-' + runningid + '-spinner-icon').addClass('d-none');
          $('#files-ocr-' + runningid + '-runner-icon').removeClass('d-none');
          $('#file-' + runningid).hide('slow', function(){ $(this).remove(); });
          mode = '';
          runningfiles.shift();
          runningid = 0;
        } else if (mode == 'failed') {
          $('.files-ocr-' + runningid + '-actor').addClass('bg-danger');
          $('.files-ocr-' + runningid + '-actor').addClass('text-white');
          $('#files-ocr-' + runningid + '-spinner-icon').addClass('d-none');
          $('#files-ocr-' + runningid + '-runner-icon').removeClass('d-none');
          mode = '';
          runningfiles.shift();
          runningid = 0;
        }
      }

      function workerVal() {
        $.getJSON('/ajax/file/validate/shortresponse/' + runningid, function(data) {
          if (data.Result.Success) {
            updateProgress();
            if (data.Result.CanOcr == true) {
              workerStart('genjpg');
            } else {
              reportError(runningid, '/ajax/file/validate/shortresponse/' + runningid, data.Result.Error.Code, 'OCR für die Datei nicht verfügbar.', 'warning');
              workerStart('finish');
            }
          } else {
            updateProgress(false);
            reportError(runningid, '/ajax/file/validate/shortresponse/' + runningid, data.Result.Error.Code, data.Result.Error.Message, 'warning');
            workerStart('failed');
          }
        }).fail(function(obj, error, errno) {
          updateProgress(false);
          reportError(runningid, '/ajax/file/validate/shortresponse/' + runningid, errno, error, 'danger');
          workerStart('failed');
        });
      }

      function workerJpg() {
        $.getJSON('/ajax/file/generateJpg/' + runningid, function(data) {
          if (data.Result.Success) {
            for (key in data.Replacers) {
              $('#' + key).text(data.Replacers[key]);
            }
            updateProgress();
            workerStart('gentif');
          } else {
            updateProgress(false);
            reportError(runningid, '/ajax/file/generateJpg/' + runningid, data.Result.Error.Code, data.Result.Error.Message, 'warning');
            workerStart('failed');
          }
        }).fail(function(obj, error, errno) {
          updateProgress(false);
          reportError(runningid, '/ajax/file/generateJpg/' + runningid, errno, error, 'danger');
          workerStart('failed');
        });
      }

      function workerOcr() {
        var dif = requestssent - requestsdone;
        if (requestsdone < filepages) {
          if (dif < 3 && lastrequest < (filepages - 1)) {
            sendRequest('Ocr');
          }
          setTimeout(workerOcr, 250);
        }
        else {
          workerStart('purimg');
        }
      }

      function workerTif() {
        var dif = requestssent - requestsdone;
        if (requestsdone < filepages) {
          if (dif < 3 && lastrequest < (filepages - 1)) {
            sendRequest('Tif');
          }
          setTimeout(workerTif, 250);
        }
        else {
          workerStart('genocr');
        }
      }

      function sendRequest(runningObject) {
        lastrequest += 1;
        requestssent += 1;
        $.getJSON('/ajax/file/generate' + runningObject + '/' + runningid + '+' + lastrequest, function(data) {
            if (data.Result.Success && data.File.Id == runningid) {
              for (key in data.Replacers) {
                $('#' + key).text(data.Replacers[key]);
              }
              updateProgress();
              requestsdone += 1;
            } else {
              updateProgress(false);
              reportError(runningid, '/ajax/file/generate' + runningObject + '/' + runningid, data.Result.Error.Code, data.Result.Error.Message, 'warning');
              workerStart('failed');
            }
          }).fail(function(obj, error, errno) {
            updateProgress(false);
            reportError(runningid, '/ajax/file/generate' + runningObject + '/' + runningid, errno, error, 'danger');
            workerStart('failed');
          });
      }

      function workerPurge() {
        $.getJSON('/ajax/file/purgeImages/' + runningid, function(data) {
          if (data.Result.Success) {
            updateProgress();
            workerStart('finish');
          } else {
            updateProgress(false);
            reportError(runningid, '/ajax/file/purgeImages/' + runningid, data.Result.Error.Code, data.Result.Error.Message, 'warning');
            workerStart('finish');
          }
        }).fail(function(obj, error, errno) {
          updateProgress(false);
          reportError(runningid, '/ajax/file/purgeImages/' + runningid, errno, error, 'danger');
          workerStart('finish');
        });
      }
